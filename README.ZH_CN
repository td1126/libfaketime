libfaketime, version 0.9.10 (March 2022)
========================================

该文件的内容：
---------------------

1.简介
2.兼容性问题
3.安装
4. 用法
   a) 基础知识
   b) 使用绝对日期
   c) 使用“开始于”日期
   d) 使用相对日期的偏移量
   e) 高级功能和注意事项
   f) 在系统范围内伪造日期和时间
   g) 使用“faketime”包装脚本
   h) 根据经过的时间或调用次数“限制”libfaketime
   i）“限制”每个进程的 libfaketime
   j) 产生一个外部进程
   k) 将时间戳保存到文件中，从文件中加载它们
   l) 用确定性数字序列代替随机数
5. 执照
6. 联系方式

一、简介
---------------

libfaketime 拦截程序用来检索当前日期和时间的各种系统调用。 然后它将修改（伪造）的日期和时间（由您，用户指定）报告给这些程序。 这意味着您可以修改程序看到的系统时间，而无需更改系统范围的时间。

libfaketime 允许您指定绝对日期（例如，01/01/2004）和相对日期（例如，10 天前）。

libfaketime 可能用于各种目的，例如

- 确定性的构建过程
- 调试与时间相关的问题，例如过期的 SSL 证书
- 2038 年合规性测试软件

libfaketime 附带一个名为“faketime”的命令行包装器，使其更易于使用，但并未公开 libfaketime 的所有功能。 如果 faketime 命令未涵盖您的用例，请务必查看此文档是否可以通过直接使用 libfaketime 来实现。

2.兼容性问题
----------------------

- libfaketime 应该可以在 Linux 和 macOS 上运行。
   你的旅费可能会改变; 据报道，其他一些 *NIX 也可以工作。

- libfaketime 使用操作系统链接器的库预加载机制（涉及启动程序），因此不能使用静态链接的二进制文件或设置了 setuid 标志的二进制文件（例如，像“ping”或“passwd”这样的 suidroot 程序 ）。
   有关详细信息，请参阅系统链接器的联机帮助页。

- libfaketime 支持 pthreads 环境。 构建了一个单独的库 (libfaketimeMT.so.1)，其中包含 pthread 同步调用。 该库还通过 time() 拦截单线程调用，因为库静态缓存了几个变量，并且在未同步访问时可能会导致问题。
   但是，对于某些应用程序来说，这样做的性能损失可能是一个问题。 如果是这种情况，您可以通过从 Makefile 中删除 -DPTHREAD_SINGLETHREADED_TIME 并重建 libfaketimeMT.so.1 来尝试使用不同步的 time() 拦截

* 基于 Java-/JVM 的应用程序可以工作，但您需要传入一个额外的参数 (FAKETIME_DONT_FAKE_MONOTONIC)。 有关详细信息，请参阅下面的使用基础知识。 如果没有这个参数，java 命令通常会挂起。

* libfaketime 最终将被动态加载系统库（例如 librt）的应用程序自己显式地绕过，而不是在应用程序启动时依赖链接器来这样做。 除非您可以修改它们，否则 libfaketime 将无法与这些应用程序一起使用。





